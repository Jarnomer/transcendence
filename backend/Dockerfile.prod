FROM node:22-slim AS builder

WORKDIR /app

RUN npm install -g pnpm@latest-10

# Copy package files and workspace config
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./
COPY backend/package.json ./backend/
COPY shared/package.json ./shared/
COPY backend/services/*/package.json ./backend/services/

# Install all dependencies including dev dependencies
RUN pnpm install --frozen-lockfile

# Copy source code
COPY . .

# Build shared module first
RUN cd shared && pnpm run build

# Build all backend services
WORKDIR /app/backend
RUN pnpm run build

# Production image
FROM node:22-slim

WORKDIR /app

ENV NODE_ENV=production

# Copy package files for production install
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./
COPY backend/package.json ./backend/
COPY shared/package.json ./shared/
COPY backend/services/*/package.json ./backend/services/

# Install production dependencies
RUN npm install -g pnpm@latest-10
RUN pnpm install --frozen-lockfile --prod

# Copy built files
COPY --from=builder /app/backend/dist ./backend/dist
COPY --from=builder /app/shared/dist ./shared/dist

# Copy necessary files
COPY backend/database ./backend/database
COPY backend/start-prod.js ./backend/
COPY .env ./.env

# Create directories
RUN mkdir -p /app/backend/database/uploads
RUN mkdir -p /app/backend/logs

# Prepare module resolution
RUN node -e "const fs=require('fs'); const path=require('path'); const dir='/app/node_modules/@my-backend'; if(!fs.existsSync(dir)) fs.mkdirSync(dir, {recursive:true});"
RUN ln -sf /app/shared/dist /app/node_modules/@shared
RUN ln -sf /app/backend/dist/backend/services/main_server /app/node_modules/@my-backend/main_server
RUN ln -sf /app/backend/dist/backend/services/game_service /app/node_modules/@my-backend/game_service
RUN ln -sf /app/backend/dist/backend/services/matchmaking_service /app/node_modules/@my-backend/matchmaking_service
RUN ln -sf /app/backend/dist/backend/services/remote_service /app/node_modules/@my-backend/remote_service
RUN ln -sf /app/backend/dist/backend/services/user_service /app/node_modules/@my-backend/user_service

# Set execute permission on start script
RUN chmod +x ./backend/start-prod.js

# Start all services
CMD ["node", "backend/start-prod.js"]
